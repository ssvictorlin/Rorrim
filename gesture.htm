<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>Gesture Control Example</title>
	<link rel="stylesheet" href="css/demo_gesture.css">
	<script src="js/tracking-min.js"></script>
  <script src="js/compatibility.js"></script>
  <script src="js/smoother.js"></script>

 
  
</head>
<body>
	
	<!--<div class="demo-container">
	  <video id="myVideo" preload autoplay loop muted controls ></video>
	  
	</div>-->

	<!--<button align="center" onclick="clickevent()" id="Draw_button" style="z-index:10" >Big</button>-->
	<canvas id="thecanvas" width="800px" height="600px" style="z-index:50;"> </canvas>
	<canvas id="thecanvas_download" width="800px" height="600px"> </canvas>
	
	<div style="position:absolute;z-index:10; width:100%;margin-right:auto;margin-left:auto;">
		<p id="time" style="font-size:400px; text-align:center; color:#0099FF; "></p>
	</div>
	
	<script>

		var Photostate = false;
		var sh;
		function clickevent() {
			var video = document.getElementById('myVideo');
			console.log("hi" + video.videoWidth);
			var thecanvas = document.getElementById('thecanvas');
			var thecanvas_download = document.getElementById('thecanvas_download');
			thecanvas_download.width = video.videoWidth;
			thecanvas_download.height = video.videoHeight;
			console.log("A"+thecanvas_download.width, "A"+thecanvas_download.height);
			draw( video, thecanvas, thecanvas_download );
			Photostate = false;
		}
		
		function draw( video, thecanvas, thecanvas_download ){
	 
			// get the canvas context for drawing
			var context1 = thecanvas.getContext('2d');


			// draw the video contents into the canvas x, y, width, height
			context1.translate(300, 0);
			context1.scale(-1,1);
			context1.drawImage( video, 0, 0, 300, 225);

		    // get the image data from the canvas object
			var context2 = thecanvas_download.getContext('2d');
			console.log("B"+ thecanvas_download.width, "B"+thecanvas_download.height);
			context2.translate(thecanvas_download.width, 0);
			context2.scale(-1,1);
			context2.drawImage( video, 0, 0, thecanvas_download.width, thecanvas_download.height);
			thecanvas_download.style.display ="none";
			
			var dataURL = thecanvas_download.toDataURL();
			//dataURL = dataURL.replace();//dataURL.replace("image/png","image/octet-stream");
			//console.log(dataURL);
			//document.location.href = dataURL;
			var link = document.createElement('a');
			link.download = "selfie.png";
			link.href = dataURL;
			link.click();
		}
		

		function countDown() {
			if(!Photostate){
				Photostate = true;
				setTimeout("clickevent()",4200);
				countdown();
			}
		}
		
		function countdown() {
	  
			var Duration = 3,
			display = document.querySelector('#time');
			//display.textContent = 3;
			startTimer(Duration, display);
        };
		
		function startTimer(duration, display) {
			var start = Date.now(), diff, minutes, seconds;
			
			function timer() {
				// get the number of seconds that have elapsed since 
				diff = duration - (((Date.now() - start) / 1000) | 0);

				// does the same job as parseInt truncates the float
				minutes = (diff / 60) | 0;
				seconds = (diff % 60) | 0;
				
				//seconds = seconds < 10 ? "0" + seconds : seconds;
				display.textContent =  seconds; 
				if (seconds == -1) {clearTimeout(sh);display.textContent ="";}

				if (diff <= 0) {
					// add one second so that the count down starts at the full duration
					// example 05:00 not 04:59
					//start = Date.now() + 1000;
				}
			};
			
			// we don't want to wait a full second before the timer starts
			timer();
			sh=setInterval(timer, 1000);
        }
		
	</script>
	
  <script src="js/my_color_tracking_selfie.js"></script>
</body>
</html>
